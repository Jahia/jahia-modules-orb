description: >
  Cancellation of a released module

parameters:
  resource_class:
    type: string
    default: "small"
    description: "CircleCI resource_class (small, medium, large, xlarge, ...)"
  working_directory:
    type: string
    default: "~/source"
    description: "Working directory for the job"
  module_id:
    type: string
    description: "ID of the module"
  release_version:
    type: string
    description: "Version of the release"
  pipeline_id:
    type: string
    description: "Pipeline ID"
  nexus_username:
    type: env_var_name
    default: NEXUS_USERNAME
    description: "Nexus Username"
  nexus_password:
    type: env_var_name
    default: NEXUS_PASSWORD
    description: "Nexus Password"
  circleci_pipeline_launch_token:
    type: env_var_name
    default: CIRCLECI_PIPELINE_LAUNCH_TOKEN
    description: "CircleCI Token to launch the pipeline"

working_directory: << parameters.working_directory >>

resource_class: << parameters.resource_class >>

docker:
  - image: cimg/openjdk:8.0.302-node

steps:
  - jq/install
  - run:
      name: Retrieve staging repository ID and drop staging repository on Nexus
      command: |
        curl -u ${<< parameters.nexus_username >>}:${<< parameters.nexus_password >>} -H "Accept: application/json" https://devtools.jahia.com/nexus/service/local/staging/profile_repositories > staging-repos.json
        stagingRepositoryId=$(cat staging-repos.json | jq '.data[] | select(.description|test("<< parameters.module_id >>:<< parameters.release_version >>")) | .repositoryId')
        echo "Staging repository being dropped: ${stagingRepositoryId}"
        curl -u ${<< parameters.nexus_username >>}:${<< parameters.nexus_password >>} -H "Accept: application/json" -H "Content-Type: application/json" -d "{\"data\":{\"stagedRepositoryIds\":[${stagingRepositoryId}]}}" https://devtools.jahia.com/nexus/service/local/staging/bulk/drop
  - run:
      name: Cancel the on-hold release workflow
      command: |
        on_release_id=$(curl -G "https://circleci.com/api/v2/pipeline/<< parameters.pipeline_id >>/workflow" -H "Circle-Token: ${<< parameters.circleci_pipeline_launch_token >>}"|jq -rs '.[].items[]|select(.name == "on-release")|.id')
        curl -X POST "https://circleci.com/api/v2/workflow/$on_release_id/cancel" -H "Circle-Token: ${<< parameters.circleci_pipeline_launch_token >>}"
