description: >
  Perform a release

parameters:
  primary_release_branch:
    type: string
    default: "main"
    description: "Name of the primary release branch (master, main, ...)"
  module_id:
    type: string
    description: "ID of the module"
  github_slug:
    type: string
    description: "GitHub SLUG of the module (for example: jahia/sandbox)"
  ssh_key_fingerprints:
    type: string
    description: "Module fingerprints"
  resource_class:
    type: string
    default: "large"
    description: "CircleCI resource_class (small, medium, large, xlarge, ...)"
  working_directory:
    type: string
    default: "~/source"
    description: "Working directory for the job"
  release_id:
    type: string
    description: "GitHub release ID"
  release_version:
    type: string
    description: "Version to release"
  git_user_name:
    type: string
    default: "Jahia CI"
    description: "Git user name"
  git_user_email:
    type: string
    default: "jahia-ci@jahia.com"
    description: "Git user email"
  github_api_token:
    type: env_var_name
    default: GITHUB_API_TOKEN
    description: "GitHub API token"

working_directory: << parameters.working_directory >>

resource_class: << parameters.resource_class >>

docker:
  - image: cimg/openjdk:8.0.275-node

steps:
  - checkout
  - generate-cachekey-seed:
      working_directory: << parameters.working_directory >>
  - restore_cache:
      keys:
        - v1-maven-dependencies-{{ checksum "maven_cache_seed" }}
        # fallback to using the latest cache if no exact match is found
        - v1-maven-dependencies-
  - add_ssh_keys:
      fingerprints:
        - << parameters.ssh_key_fingerprints >>
  - run:
      name: Getting latest changes from the remote branch
      command: |
        git fetch --all
        git pull origin $CIRCLE_BRANCH --quiet
  - run:
       name: Delete github tag << parameters.release_version >>
       command: |
         mkdir -p ~/.ssh
         ssh-keyscan github.com >> ~/.ssh/known_hosts
         git config user.email << parameters.git_user_email >>
         git config user.name << parameters.git_user_name >>
         git tag --delete << parameters.release_version >>
         git push --delete origin << parameters.release_version >>
  - run:
      name: Release prepare version for << parameters.release_version >>
      command: |
        FINAL_RELEASE_VERSION=$(echo << parameters.release_version >> | cut -d'-' -f 1)
        MAJOR_VERSION=`echo $FINAL_RELEASE_VERSION | cut -d. -f1`
        MINOR_VERSION=`echo $FINAL_RELEASE_VERSION | cut -d. -f2`
        REVISION=`echo $FINAL_RELEASE_VERSION | cut -d. -f3`
        if [[ "<< parameters.primary_release_branch >>" == "master"  || "<< parameters.primary_release_branch >>" == "main"  ||  "<< parameters.primary_release_branch >>" =~ ^[0-9]_x$ ]]; then
          NEXT_MINOR_VERSION=`expr $MINOR_VERSION + 1`
          NEXT_DEVELOPMENT_VERSION="$MAJOR_VERSION.$NEXT_MINOR_VERSION.0"-SNAPSHOT
        else
          NEXT_REVISION=`expr $REVISION + 1`
          NEXT_DEVELOPMENT_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$NEXT_REVISION"-SNAPSHOT
        fi
        mvn -s .circleci/.circleci.settings.xml -B -Dtag=$FINAL_RELEASE_VERSION release:prepare -DreleaseVersion=$FINAL_RELEASE_VERSION -DdevelopmentVersion="$NEXT_DEVELOPMENT_VERSION"
  - save_cache:
      # need to match rollback cache key on restore
      key: v1-rollback-<< parameters.release_id >>
      paths:
        - pom.xml.releaseBackup
        - release.properties
  - run:
      name: Update github release for id << parameters.release_id >>
      command: |
        yarn
        yarn add auto
        GH_TOKEN=${<< parameters.github_api_token >>} yarn auto changelog
        curl -X PATCH \
        -H "Accept:application/vnd.github.v3+json" \
        -d "{\"tag_name\":\"<< parameters.release_version >>\", \"prerelease\": false, \"draft\": false}" -u \
        jahia-ci:${<< parameters.github_api_token >>} https://api.github.com/repos/<< parameters.github_slug >>/releases/<< parameters.release_id >>
        curl \
        -H "Content-Type: $(file -b --mime-type CHANGELOG.md)" \
        -u jahia-ci:${<< parameters.github_api_token >>}  \
        --data-binary @CHANGELOG.md \
        "https://uploads.github.com/repos/<< parameters.github_slug >>/releases/<< parameters.release_id >>/assets?name=$(basename CHANGELOG.md)"
  - run:
      name: Perform release
      command: |
        mvn -s .circleci/.circleci.settings.xml release:perform -Prelease-to-staging-repository -DscmCommentPrefix="[skip ci] [maven-release-plugin]"
  - run:
      name: Copy artifacts
      command: |
        mkdir /tmp/artifacts/
        cp /home/circleci/source/target/*.jar /tmp/artifacts/
  - store_artifacts:
      path: /tmp/artifacts/
