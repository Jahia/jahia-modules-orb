# Run Jahia installer code-signing process
# https://www.ssl.com/guide/remote-ev-code-signing-with-esigner/#ftoc-heading-12
description: >
  Run Jahia installer code-signing process as batch for installer files
  - Finds all jar/exe installer files with <file_pattern> that are descendants of <installer_dir>
  - Needs to be run as a separate job with java 11 image (cimg/openjdk:11.0-node)
  - Signed artifacts are added in /tmp/artifacts folder

parameters:
  installer_dir:
    type: string
    default: "~"
    description: >
      Any parent directory where installer file resides
      # - must be specified as full path?
  file_pattern:
    type: string
    default: "*"
    description: >
      File name pattern of installer file to sign
      - orb already checks exe/jar extension (no need to include)

  # context variables
  # - code-signing-orb for prod values
  credential_id:
    type: env_var_name
    default: CREDENTIAL_ID
    description: "Code signer Credential ID"
  signer_username:
    type: env_var_name
    default: SIGNER_USERNAME
    description: "Code signer username"
  signer_password:
    type: env_var_name
    default: SIGNER_PASSWORD
    description: "Code signer password"
  totp_secret:
    type: env_var_name
    default: TOTP_SECRET
    description: "Used to generate TOTP token"


steps:
  - run:
      name: Initialize code sign tools
      command: |
        sudo -u root apt-get update && sudo -u root apt-get install -y oathtool
        tool_url=https://www.ssl.com/download/29764/
        curl -s $tool_url --output CodeSignTool.zip
        unzip CodeSignTool.zip
        rm -rf CodeSignTool.zip

  - run:
      name: Generate signed installer files
      command: |
        cd CodeSignTool-v1.2.0
        OUTPUT_DIR=/tmp/signed-installers
        mkdir $OUTPUT_DIR
        for INSTALLER_FILE in `find << parameters.installer_dir >> -name "<< parameters.file_pattern >>" \( -name "*.exe" -or -name "*.jar" \)`; do
          echo "Signing $INSTALLER_FILE..."
          printf `oathtool --totp -b -d 6 ${<< parameters.totp_secret >>}` | ./CodeSignTool.sh sign \
            -input_file_path=$INSTALLER_FILE \
            -output_dir_path=$OUTPUT_DIR \
            -username=${<< parameters.signer_username >>} \
            -password=${<< parameters.signer_password >>} \
            -credential_id=${<< parameters.credential_id >>}
          cp $OUTPUT_DIR/`basename $INSTALLER_FILE` $INSTALLER_FILE # overwrite original file
        done
