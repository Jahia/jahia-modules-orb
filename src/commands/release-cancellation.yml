description: >
  Perfoms a release cancellation

parameters:
  NEXUS_USERNAME:
    type: env_var_name
    default: NEXUS_USERNAME
    description: "Nexus Username"
  NEXUS_PASSWORD:
    type: env_var_name
    default: NEXUS_PASSWORD
    description: "Nexus Password"
steps:
  - jq/install
  - run:
      environment:
        PARAM_VERSION: <<parameters.version>>
        PARAM_ORG: <<parameters.org>>
        PARAM_REPO: <<parameters.repo>>
        PARAM_USERNAME: "$<<parameters.NEXUS_USERNAME>>"
        PARAM_PASSWORD: "$<<parameters.NEXUS_PASSWORD>>"
        PARAM_DRYRUN: <<parameters.dry-run>>
      name: Generate missing Docker tags
      command: <<include(scripts/docker-tags.sh)>>
  - run:
      name: Retrieve staging repository ID and drop staging repository on Nexus
      command: |
        echo <<parameters.NEXUS_USERNAME>>
        echo ${<<parameters.NEXUS_USERNAME>>}
        echo $<<parameters.NEXUS_USERNAME>>
        # curl -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} -H "Accept: application/json" https://devtools.jahia.com/nexus/service/local/staging/profile_repositories > staging-repos.json
        # stagingRepositoryId=$(cat staging-repos.json | jq '.data[] | select(.description|test("<< pipeline.parameters.MODULE_ID >>:<< pipeline.parameters.RELEASE_VERSION >>")) | .repositoryId')
        # echo "Staging repository being dropped: ${stagingRepositoryId}"
        # curl -u ${NEXUS_USERNAME}:${NEXUS_PASSWORD} -H "Accept: application/json" -H "Content-Type: application/json" -d "{\"data\":{\"stagedRepositoryIds\":[${stagingRepositoryId}]}}" https://devtools.jahia.com/nexus/service/local/staging/bulk/drop
  # - run:
  #     name: Cancel the on-hold release workflow
  #     command: |
  #       on_release_id=$(curl -G "https://circleci.com/api/v2/pipeline/<<pipeline.id>>/workflow" -H "Circle-Token: $CIRCLECI_PIPELINE_LAUNCH_TOKEN"|jq -rs '.[].items[]|select(.name == "on-release")|.id')
  #       curl -X POST "https://circleci.com/api/v2/workflow/$on_release_id/cancel" -H "Circle-Token: $CIRCLECI_PIPELINE_LAUNCH_TOKEN"